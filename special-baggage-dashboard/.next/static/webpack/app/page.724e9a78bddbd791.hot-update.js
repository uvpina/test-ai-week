"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/api/loading-records.ts":
/*!************************************!*\
  !*** ./lib/api/loading-records.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchLoadingRecords: function() { return /* binding */ fetchLoadingRecords; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\n// Backend API URL - adjust port if your Spring Boot app runs on a different port\nconst API_BASE_URL = \"http://localhost:8080/api\";\n/**\n * Converts a local date to UTC ISO string format with the specific time parts\n * @param hoursOffset - Hours to offset from current time (positive for future, negative for past)\n * @returns UTC date string in ISO format\n */ function getUTCDateString(hoursOffset) {\n    const date = new Date();\n    // Add or subtract the specified hours\n    date.setHours(date.getHours() + hoursOffset);\n    // Convert to UTC ISO string\n    return date.toISOString();\n}\nconst fetchLoadingRecords = async (filters)=>{\n    try {\n        // Set default time ranges if not provided\n        const pastHours = filters.timeRangePast || 24;\n        const futureHours = filters.timeRangeFuture || 24;\n        // Calculate the UTC dates for the time range\n        const fromDate = getUTCDateString(-pastHours); // Past time (negative offset)\n        const toDate = getUTCDateString(futureHours); // Future time (positive offset)\n        console.log(\"Fetching baggage records from \".concat(fromDate, \" to \").concat(toDate));\n        // Prepare params with time range and filters\n        const params = {\n            from: fromDate,\n            to: toDate,\n            flightStatus: filters.flightStatus !== \"All\" ? filters.flightStatus : undefined,\n            passengerType: filters.passengerType !== \"All\" ? filters.passengerType : undefined,\n            baggageStatus: filters.baggageStatus !== \"All\" ? filters.baggageStatus : undefined\n        };\n        // Make actual API call to the backend using the new endpoint\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(API_BASE_URL, \"/get-special-baggage\"), {\n            params: params\n        });\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching special baggage records:\", error);\n        throw error;\n    }\n}; /* \n// This is the original function with mock data that has been commented out\nexport const fetchLoadingRecords = async (filters: FilterOptions): Promise<LoadingRecord[]> => {\n  // Simulate API call with mock data for now\n  // In a real app, this would be:\n  // return axios.get('/api/loading-records', { params: filters }).then(res => res.data);\n  \n  // Mock data that matches the UI design\n  const mockData: LoadingRecord[] = [\n    {\n      flightNumber: 'DL123',\n      seat: '8A',\n      baggageType: 'pet',\n      status: 'not_loaded',\n      hasBoarded: true,\n      departureDateTime: '28/FEB 23:30',\n      flightStand: 'A23B5',\n      bagtag: 'BAG1234'\n    },\n    {\n      flightNumber: 'AA245',\n      seat: '12C',\n      baggageType: 'wheelchair',\n      status: 'not_loaded',\n      hasBoarded: true,\n      departureDateTime: '01/MAR 06:15',\n      flightStand: 'C12D4',\n      bagtag: 'BAG5678'\n    },\n    {\n      flightNumber: 'UA360',\n      seat: '3F',\n      baggageType: 'weapon',\n      status: 'loaded',\n      hasBoarded: false,\n      departureDateTime: '28/FEB 15:45',\n      flightStand: 'B45F2',\n      bagtag: 'BAG9012'\n    },\n    {\n      flightNumber: 'BA789',\n      seat: '5D',\n      baggageType: 'wheelchair',\n      status: 'loaded',\n      hasBoarded: true,\n      departureDateTime: '02/MAR 10:20',\n      flightStand: 'E17A3',\n      bagtag: 'BAG3456'\n    },\n    {\n      flightNumber: 'LH550',\n      seat: '17A',\n      baggageType: 'pet',\n      status: 'not_loaded',\n      hasBoarded: false,\n      departureDateTime: '01/MAR 14:55',\n      flightStand: 'D31C7',\n      bagtag: 'BAG7890'\n    },\n    {\n      flightNumber: 'AC410',\n      seat: '20B',\n      baggageType: 'weapon',\n      status: 'not_loaded',\n      hasBoarded: true,\n      departureDateTime: '28/FEB 22:10',\n      flightStand: 'F09E1',\n      bagtag: 'BAG2345'\n    },\n    {\n      flightNumber: 'AC410',\n      seat: '20B',\n      baggageType: 'pet',\n      status: 'not_loaded',\n      hasBoarded: false,\n      departureDateTime: '28/FEB 22:10',\n      flightStand: 'F09E1',\n      bagtag: 'BAG6789'\n    }\n  ];\n\n  // Apply filters\n  let filteredData = [...mockData];\n  \n  // Add filter for 'Boarded' and 'Not Boarded'\n  if (filters.flightStatus !== 'All') {\n    filteredData = filteredData.filter(record => {\n      if (filters.flightStatus === 'Boarded') return record.hasBoarded;\n      if (filters.flightStatus === 'Not Boarded') return !record.hasBoarded;\n      return true;\n    });\n  }\n  \n  if (filters.passengerType !== 'All') {\n    filteredData = filteredData.filter(record => {\n      if (filters.passengerType === 'Pet') return record.baggageType === 'pet';\n      if (filters.passengerType === 'Wheelchair') return record.baggageType === 'wheelchair';\n      if (filters.passengerType === 'Weapon') return record.baggageType === 'weapon';\n      return true;\n    });\n  }\n  \n  if (filters.baggageStatus !== 'All') {\n    filteredData = filteredData.filter(record => {\n      if (filters.baggageStatus === 'Loaded') return record.status === 'loaded';\n      if (filters.baggageStatus === 'Not Loaded') return record.status === 'not_loaded';\n      return true;\n    });\n  }\n\n  // Sort by departure date/time\n  filteredData.sort((a, b) => {\n    // Extract date and time components\n    const [dateA, timeA] = a.departureDateTime.split(' ');\n    const [dateB, timeB] = b.departureDateTime.split(' ');\n\n    // Parse dates (DD/MMM format)\n    const [dayA, monthA] = dateA.split('/');\n    const [dayB, monthB] = dateB.split('/');\n\n    // Convert month names to numbers\n    const monthsMap: Record<string, number> = {\n      'JAN': 0, 'FEB': 1, 'MAR': 2, 'APR': 3, 'MAY': 4, 'JUN': 5,\n      'JUL': 6, 'AUG': 7, 'SEP': 8, 'OCT': 9, 'NOV': 10, 'DEC': 11\n    };\n\n    // Create Date objects for comparison\n    const dateObjA = new Date(new Date().getFullYear(), monthsMap[monthA], parseInt(dayA), \n      parseInt(timeA.split(':')[0]), parseInt(timeA.split(':')[1]));\n    const dateObjB = new Date(new Date().getFullYear(), monthsMap[monthB], parseInt(dayB), \n      parseInt(timeB.split(':')[0]), parseInt(timeB.split(':')[1]));\n\n    return dateObjA.getTime() - dateObjB.getTime();\n  });\n\n  return new Promise(resolve => {\n    // Simulate network delay\n    setTimeout(() => {\n      resolve(filteredData);\n    }, 500);\n  });\n};\n*/ \n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api/loading-records.ts\n"));

/***/ })

});